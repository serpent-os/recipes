From 1126142cbdcbdee93c721e590e0b7e07bf40ca71 Mon Sep 17 00:00:00 2001
From: Luke Jones <luke@ljones.dev>
Date: Tue, 11 Feb 2025 00:05:08 +1300
Subject: [PATCH 06/28] hid-asus: set mcu hack to off if required MCU version

Signed-off-by: Luke Jones <luke@ljones.dev>
---
 drivers/hid/hid-asus.c                     |  3 +++
 drivers/platform/x86/asus-wmi.c            | 12 +++++++++++-
 include/linux/platform_data/x86/asus-wmi.h |  4 ++++
 3 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/drivers/hid/hid-asus.c b/drivers/hid/hid-asus.c
index 040eeb25f706..93217442b4b6 100644
--- a/drivers/hid/hid-asus.c
+++ b/drivers/hid/hid-asus.c
@@ -614,6 +614,8 @@ static void mcu_maybe_warn_version(struct hid_device *hdev, int idProduct)
 			 "The MCU version must be %d or greater\n"
 			 "Please update your MCU with official ASUS firmware release\n",
 			 min_version);
+	} else {
+		set_ally_mcu_hack_available(false);
 	}
 }
 
@@ -1420,4 +1422,5 @@ static struct hid_driver asus_driver = {
 };
 module_hid_driver(asus_driver);
 
+MODULE_IMPORT_NS("ASUS_WMI");
 MODULE_LICENSE("GPL");
diff --git a/drivers/platform/x86/asus-wmi.c b/drivers/platform/x86/asus-wmi.c
index 5033dd45103c..2afb949ac397 100644
--- a/drivers/platform/x86/asus-wmi.c
+++ b/drivers/platform/x86/asus-wmi.c
@@ -338,6 +338,16 @@ struct asus_wmi {
 
 static bool ally_mcu_usb_plug;
 
+/*
+ * The HID driver needs to check MCU version and set this to false if the MCU FW
+ * version is >= the minimum requirements. New FW do not need the hacks.
+ */
+void set_ally_mcu_hack_available(bool enabled)
+{
+	ally_mcu_usb_plug = enabled;
+}
+EXPORT_SYMBOL_NS_GPL(set_ally_mcu_hack_available, "ASUS_WMI");
+
 /* WMI ************************************************************************/
 
 static int asus_wmi_evaluate_method3(u32 method_id,
@@ -4712,7 +4722,7 @@ static int asus_wmi_add(struct platform_device *pdev)
 
 	ally_mcu_usb_plug = acpi_has_method(NULL, ASUS_USB0_PWR_EC0_CSEE)
 				&& dmi_check_system(asus_rog_ally_device);
-	if (ally_mcu_usb_plug) {
+	if (ally_mcu_usb_plug && dmi_match(DMI_BOARD_NAME, "RC71")) {
 		/*
 		 * These steps ensure the device is in a valid good state, this is
 		 * especially important for the Ally 1 after a reboot.
diff --git a/include/linux/platform_data/x86/asus-wmi.h b/include/linux/platform_data/x86/asus-wmi.h
index 783e2a336861..f1b96f90e8e2 100644
--- a/include/linux/platform_data/x86/asus-wmi.h
+++ b/include/linux/platform_data/x86/asus-wmi.h
@@ -158,8 +158,12 @@
 #define ASUS_WMI_DSTS_LIGHTBAR_MASK	0x0000000F
 
 #if IS_REACHABLE(CONFIG_ASUS_WMI)
+void set_ally_mcu_hack_available(bool enabled);
 int asus_wmi_evaluate_method(u32 method_id, u32 arg0, u32 arg1, u32 *retval);
 #else
+static inline void set_ally_mcu_hack_available(bool enabled) {
+	return -ENODEV;
+}
 static inline int asus_wmi_evaluate_method(u32 method_id, u32 arg0, u32 arg1,
 					   u32 *retval)
 {
-- 
2.48.1

