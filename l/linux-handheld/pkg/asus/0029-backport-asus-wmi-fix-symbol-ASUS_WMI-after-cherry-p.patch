From c9a1c10dfb6c4404624fa2c9dd8648164b71c882 Mon Sep 17 00:00:00 2001
From: Luke Jones <luke@ljones.dev>
Date: Sat, 1 Feb 2025 14:19:33 +1300
Subject: [PATCH 29/29] backport: asus-wmi: fix symbol 'ASUS_WMI' after
 cherry-pick from wip/ally-master

Signed-off-by: Luke Jones <luke@ljones.dev>
---
 drivers/hid/hid-asus-ally.c         | 2 +-
 drivers/hid/hid-asus.c              | 2 +-
 drivers/platform/x86/asus-armoury.c | 2 +-
 drivers/platform/x86/asus-wmi.c     | 8 ++++----
 4 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/hid/hid-asus-ally.c b/drivers/hid/hid-asus-ally.c
index b5688f1401a5..f69c15c1acce 100644
--- a/drivers/hid/hid-asus-ally.c
+++ b/drivers/hid/hid-asus-ally.c
@@ -2256,7 +2256,7 @@ static void __exit rog_ally_exit(void)
 module_init(rog_ally_init);
 module_exit(rog_ally_exit);
 
-MODULE_IMPORT_NS("ASUS_WMI");
+MODULE_IMPORT_NS(ASUS_WMI);
 MODULE_AUTHOR("Luke D. Jones");
 MODULE_DESCRIPTION("HID Driver for ASUS ROG Ally gamepad configuration.");
 MODULE_LICENSE("GPL");
diff --git a/drivers/hid/hid-asus.c b/drivers/hid/hid-asus.c
index 2519ee2d71b1..ac7600a93e68 100644
--- a/drivers/hid/hid-asus.c
+++ b/drivers/hid/hid-asus.c
@@ -1343,5 +1343,5 @@ static struct hid_driver asus_driver = {
 };
 module_hid_driver(asus_driver);
 
-MODULE_IMPORT_NS("ASUS_WMI");
+MODULE_IMPORT_NS(ASUS_WMI);
 MODULE_LICENSE("GPL");
diff --git a/drivers/platform/x86/asus-armoury.c b/drivers/platform/x86/asus-armoury.c
index f952521df513..43c2b352ca33 100644
--- a/drivers/platform/x86/asus-armoury.c
+++ b/drivers/platform/x86/asus-armoury.c
@@ -1077,7 +1077,7 @@ static void __exit asus_fw_exit(void)
 module_init(asus_fw_init);
 module_exit(asus_fw_exit);
 
-MODULE_IMPORT_NS("ASUS_WMI");
+MODULE_IMPORT_NS(ASUS_WMI);
 MODULE_AUTHOR("Luke Jones <luke@ljones.dev>");
 MODULE_DESCRIPTION("ASUS BIOS Configuration Driver");
 MODULE_LICENSE("GPL");
diff --git a/drivers/platform/x86/asus-wmi.c b/drivers/platform/x86/asus-wmi.c
index e7b66ba39d01..72a43c19d6df 100644
--- a/drivers/platform/x86/asus-wmi.c
+++ b/drivers/platform/x86/asus-wmi.c
@@ -342,7 +342,7 @@ void set_ally_mcu_hack_available(bool enabled)
 {
 	ally_mcu_usb_plug = enabled;
 }
-EXPORT_SYMBOL_NS_GPL(set_ally_mcu_hack_available, "ASUS_WMI");
+EXPORT_SYMBOL_NS_GPL(set_ally_mcu_hack_available, ASUS_WMI);
 
 #if IS_ENABLED(CONFIG_ASUS_WMI_DEPRECATED_ATTRS)
 static void asus_wmi_show_deprecated(void)
@@ -403,7 +403,7 @@ int asus_wmi_evaluate_method(u32 method_id, u32 arg0, u32 arg1, u32 *retval)
 {
 	return asus_wmi_evaluate_method3(method_id, arg0, arg1, 0, retval);
 }
-EXPORT_SYMBOL_NS_GPL(asus_wmi_evaluate_method, "ASUS_WMI");
+EXPORT_SYMBOL_NS_GPL(asus_wmi_evaluate_method, ASUS_WMI);
 
 static int asus_wmi_evaluate_method5(u32 method_id,
 		u32 arg0, u32 arg1, u32 arg2, u32 arg3, u32 arg4, u32 *retval)
@@ -589,7 +589,7 @@ int asus_wmi_get_devstate_dsts(u32 dev_id, u32 *retval)
 
 	return 0;
 }
-EXPORT_SYMBOL_NS_GPL(asus_wmi_get_devstate_dsts, "ASUS_WMI");
+EXPORT_SYMBOL_NS_GPL(asus_wmi_get_devstate_dsts, ASUS_WMI);
 
 /**
  * asus_wmi_set_devstate() - Set the WMI function state.
@@ -610,7 +610,7 @@ int asus_wmi_set_devstate(u32 dev_id, u32 ctrl_param, u32 *retval)
 	return asus_wmi_evaluate_method(ASUS_WMI_METHODID_DEVS, dev_id,
 					ctrl_param, retval);
 }
-EXPORT_SYMBOL_NS_GPL(asus_wmi_set_devstate, "ASUS_WMI");
+EXPORT_SYMBOL_NS_GPL(asus_wmi_set_devstate, ASUS_WMI);
 
 /* Helper for special devices with magic return codes */
 static int asus_wmi_get_devstate_bits(struct asus_wmi *asus,
-- 
2.48.1

